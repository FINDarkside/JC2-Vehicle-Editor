package gui;

import gui.editpanel.EditPanel;
import gui.filetree.FileTreeModel;
import gui.filetree.SelectionListener;
import java.awt.Color;
import java.awt.Font;
import java.awt.Rectangle;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
import logic.*;
import logic.dictionaries.FieldsDictionary;
import logic.dictionaries.VehicleNames;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author FINDarkside
 */
public class MainForm extends javax.swing.JFrame {

    private Logic logic;
    private final String currentPath = Settings.currentPath;

    private ImageContainer imageContainer;

    @SuppressWarnings("LeakingThisInConstructor")
    public MainForm(Logic logic)  {
        this.logic = logic;

        initComponents();
        customInit();
        setIcons();
        loadProperties();

        logic.setForm(this);
        logic.test();
    }

    private void loadProperties() {
        File f = new File(Settings.currentPath + "\\Files\\form.property");
        if (!f.exists()) {
            return;
        }

        Properties p = new Properties();
        InputStream in;
        try {
            in = new FileInputStream(f);
            p.load(in);
        } catch (IOException ex) {
            StackTracePrinter.handle(ex);

            return;
        }

        setSize(Integer.parseInt(p.getProperty("width")), Integer.parseInt(p.getProperty("height")));
        setState(Integer.parseInt(p.getProperty("state")));
        jSplitPane1.setLastDividerLocation(Integer.parseInt(p.getProperty("dividerLocation")));
    }

    private void setIcons() {
        mOpenFile.setIcon(new ImageIcon(currentPath + "/Files/Icons/open.png"));
        mSaveFile.setIcon(new ImageIcon(currentPath + "/Files/Icons/save.png"));
        mNewFile.setIcon(new ImageIcon(currentPath + "/Files/Icons/new.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        fileChooserContainer = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        modelContainer = new javax.swing.JPanel();
        panelContainer = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mNewFile = new javax.swing.JMenuItem();
        mOpenFile = new javax.swing.JMenuItem();
        mSaveFile = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Just Cause 2 Vehicle Editor "+Settings.version);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setContinuousLayout(true);
        jSplitPane1.setLeftComponent(fileChooserContainer);

        javax.swing.GroupLayout modelContainerLayout = new javax.swing.GroupLayout(modelContainer);
        modelContainer.setLayout(modelContainerLayout);
        modelContainerLayout.setHorizontalGroup(
            modelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 756, Short.MAX_VALUE)
        );
        modelContainerLayout.setVerticalGroup(
            modelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 155, Short.MAX_VALUE)
        );

        panelContainer.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBox.light"));
        panelContainer.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelContainer.setFocusable(false);
        panelContainer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(modelContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(panelContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(modelContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jSplitPane1.setRightComponent(mainPanel);

        jMenuBar1.setPreferredSize(new java.awt.Dimension(65, 25));

        jMenu1.setText("File");
        jMenu1.setPreferredSize(new java.awt.Dimension(65, 20));

        mNewFile.setText("New");
        mNewFile.setPreferredSize(null);
        mNewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mNewFileActionPerformed(evt);
            }
        });
        jMenu1.add(mNewFile);

        mOpenFile.setText("Open");
        jMenu1.add(mOpenFile);

        mSaveFile.setText("Save");
        mSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSaveFileActionPerformed(evt);
            }
        });
        jMenu1.add(mSaveFile);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Settings");
        jMenu2.setPreferredSize(new java.awt.Dimension(65, 20));
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mNewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mNewFileActionPerformed

    }//GEN-LAST:event_mNewFileActionPerformed

    private void mSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSaveFileActionPerformed
        logic.saveCurrentProject();
    }//GEN-LAST:event_mSaveFileActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        logic.close();
    }//GEN-LAST:event_formWindowClosing

    private void customInit() {

        initPictureContainer();
        UIManager.put("Tree.leafIcon", new ImageIcon(currentPath + "\\Files\\Icons\\new.png"));

        JTree tree = new JTree(new FileTreeModel(new File(currentPath + "\\Files\\Vehicles")));
        Font currentFont = tree.getFont();
        tree.setFont(new Font(currentFont.getName(), currentFont.getStyle(), currentFont.getSize() + 4));
        tree.setRowHeight(tree.getRowHeight() + 4);
        tree.addTreeSelectionListener(new SelectionListener(tree, logic));

        fileChooserContainer.getViewport().add(tree);

    }

    public void initPictureContainer() {
        ImageContainer i;

        try {
            i = new ImageContainer((BufferedImage) (ImageIO.read(new File(Settings.currentPath + "\\test.png"))));
        } catch (IOException e) {
            StackTracePrinter.handle(e);
            i = new ImageContainer();
        }

        modelContainer.setLayout(new MigLayout("insets 0"));
        i.setVisible(true);
        i.setBorder(BorderFactory.createLineBorder(Color.black));
        i.setBackground(Color.WHITE);

        i.validate();

        modelContainer.add(i, "height 150:150, width 1:300, align center");
        this.imageContainer = i;

        JButton b = new JButton("Edit model");
        b.setFocusable(false);
        int height = 26;
        int width = 90;

        b.setBounds(i.getWidth() + 2, i.getHeight() - height, width, height);
        b.addActionListener((java.awt.event.ActionEvent evt) -> {
            logic.editModel();
        });

        modelContainer.add(b, "align center");
    }

    public void setEditPanels(List<EditPanel> panels) {
        panelContainer.removeAll();
        int i = 0;
        for (EditPanel p : panels) {
            JScrollPane sp = new JScrollPane();
            sp.setViewportView(p);
            sp.setBorder(null);
            panelContainer.add(p.getName(), sp);
            panelContainer.setBackgroundAt(i, Color.red);
            i++;
        }
    }

    public void saveState() {
        Properties p = new Properties();
        p.setProperty("width", Integer.toString(getWidth()));
        p.setProperty("height", Integer.toString(getHeight()));
        p.setProperty("state", Integer.toString(getState()));
        p.setProperty("dividerLocation", Integer.toString(jSplitPane1.getDividerLocation()));

        try {
            File f = new File(currentPath + "\\Files\\form.property");
            if (!f.exists()) {
                f.createNewFile();
            }
            OutputStream out = new FileOutputStream(new File(currentPath + "\\Files\\form.property"));

            p.store(out, "test");
        } catch (IOException ex) {
            StackTracePrinter.handle(ex);
            System.out.println("öö");
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
            StackTracePrinter.handle(e);
        }
        /* Create and display the form */
        setupGlobalExceptionHandling();

        try {
            VehicleNames.init();
            FieldsDictionary.init();
            Settings.init();
        } catch (Exception e) {
            StackTracePrinter.handle(e);
            System.exit(1);
        }
        Logic logic = new Logic();

        java.awt.EventQueue.invokeLater(() -> {
            new MainForm(logic).setVisible(true);
        });

    }

    public static void setupGlobalExceptionHandling() {
        Thread.setDefaultUncaughtExceptionHandler((Thread t, Throwable e) -> {
            StackTracePrinter.handle(e);
            System.err.println("Closing program...");
            System.exit(1);
        });
    }

    private javax.swing.JPanel editPanelContainer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane fileChooserContainer;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JMenuItem mNewFile;
    private javax.swing.JMenuItem mOpenFile;
    private javax.swing.JMenuItem mSaveFile;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel modelContainer;
    private javax.swing.JTabbedPane panelContainer;
    // End of variables declaration//GEN-END:variables
}
