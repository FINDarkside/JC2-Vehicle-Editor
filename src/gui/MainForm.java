package gui;

import gui.filetree.FileTreeModel;
import gui.filetree.SelectionListener;
import logic.Logic;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Paths;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JTree;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import logic.StackTracePrinter;

/**
 *
 * @author FINDarkside
 */
public class MainForm extends javax.swing.JFrame {

    private Logic logic;
    private final String currentPath = Paths.get("").toAbsolutePath().toString();

    private ImageContainer imageContainer;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        this.logic = new Logic();
        this.getContentPane().setBackground(new Color(255, 255, 255));

        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
            StackTracePrinter.handle(e);
        }

        logic.setForm(this);

        initComponents();
        customInit();

        setIcons();

        logic.test();

    }

    public void setIcons() {
        mOpenFile.setIcon(new ImageIcon(currentPath + "/Files/Icons/open.png"));
        mSaveFile.setIcon(new ImageIcon(currentPath + "/Files/Icons/save.png"));
        mNewFile.setIcon(new ImageIcon(currentPath + "/Files/Icons/new.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooserContainer = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        modelContainer = new javax.swing.JPanel();
        menuContainer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mNewFile = new javax.swing.JMenuItem();
        mOpenFile = new javax.swing.JMenuItem();
        mSaveFile = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout modelContainerLayout = new javax.swing.GroupLayout(modelContainer);
        modelContainer.setLayout(modelContainerLayout);
        modelContainerLayout.setHorizontalGroup(
            modelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        modelContainerLayout.setVerticalGroup(
            modelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout menuContainerLayout = new javax.swing.GroupLayout(menuContainer);
        menuContainer.setLayout(menuContainerLayout);
        menuContainerLayout.setHorizontalGroup(
            menuContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        menuContainerLayout.setVerticalGroup(
            menuContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(modelContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(menuContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(modelContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(menuContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1))
        );

        jMenuBar1.setPreferredSize(new java.awt.Dimension(65, 25));

        jMenu1.setText("File");
        jMenu1.setPreferredSize(new java.awt.Dimension(65, 20));

        mNewFile.setText("New");
        mNewFile.setPreferredSize(null);
        mNewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mNewFileActionPerformed(evt);
            }
        });
        jMenu1.add(mNewFile);

        mOpenFile.setText("Open");
        jMenu1.add(mOpenFile);

        mSaveFile.setText("Save");
        jMenu1.add(mSaveFile);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Settings");
        jMenu2.setPreferredSize(new java.awt.Dimension(65, 20));
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(fileChooserContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fileChooserContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mNewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mNewFileActionPerformed

    }//GEN-LAST:event_mNewFileActionPerformed

    private void customInit() {
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(16);

        initPictureContainer();

        UIManager.put("Tree.leafIcon", new ImageIcon(currentPath + "/Files/Icons/new.png"));

        JTree tree = new JTree(new FileTreeModel(new File(currentPath + "\\Files\\Vehicles")));
        Font currentFont = tree.getFont();
        tree.setFont(new Font(currentFont.getName(), currentFont.getStyle(), currentFont.getSize() + 4));
        tree.setRowHeight(tree.getRowHeight() + 4);
        tree.addTreeSelectionListener(new SelectionListener(tree, logic));

        fileChooserContainer.getViewport().add(tree);

    }

    public void initPictureContainer() {
        ImageContainer i;

        try {
            i = new ImageContainer((BufferedImage) (ImageIO.read(new File("test.png"))));
        } catch (IOException e) {
            StackTracePrinter.handle(e);
            i = new ImageContainer();
        }

        i.setBounds(0, 0, 400, 150);
        i.setVisible(true);
        i.setBorder(BorderFactory.createLineBorder(Color.black));
        i.setBackground(Color.WHITE);

        i.validate();

        modelContainer.add(i);
        this.imageContainer = i;

        JButton b = new JButton("Edit model");
        b.setFocusable(false);
        int height = 26;
        int width = 90;

        b.setBounds(i.getWidth() + 2, i.getHeight() - height, width, height);
        b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logic.editModel();
            }
        });

        modelContainer.add(b);
    }

    public void setEditPanel(JPanel panel) {
        panel.setPreferredSize(new Dimension(panel.getWidth(), jScrollPane1.getHeight()));
        jScrollPane1.setViewportView(panel);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        setupGlobalExceptionHandling();

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainForm().setVisible(true);
            }
        });

    }

    public static void setupGlobalExceptionHandling() {
        Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {
            @Override
            public void uncaughtException(Thread t, Throwable e) {
                StackTracePrinter.handle((Exception) e);
            }
        });
    }

    private javax.swing.JPanel editPanelContainer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane fileChooserContainer;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mNewFile;
    private javax.swing.JMenuItem mOpenFile;
    private javax.swing.JMenuItem mSaveFile;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuContainer;
    private javax.swing.JPanel modelContainer;
    // End of variables declaration//GEN-END:variables
}
